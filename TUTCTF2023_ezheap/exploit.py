from pwn import *
import sys
remote_addr = ["",]
#libc = ELF('')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./ezheap")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

debug('''
    b *$rebase(0x141f)
    b *$rebase(0x1502)
    b *$rebase(0x1664)
    b *$rebase(0x14da)
''')

def add(size):
    ru(b'> ')
    sl(b'1')
    ru(b'size:\n')
    sl(str(size).encode())

def edit(idx, content):
    ru(b'> ')
    sl(b'2')
    ru(b'index:\n')
    sl(str(idx).encode())
    ru(b'content:')
    s(content)

def show(idx):
    ru(b'> ')
    sl(b'3')
    ru(b'index:\n')
    sl(str(idx).encode())

def delete(idx):
    ru(b'> ')
    sl(b'4')
    ru(b'index:\n')
    sl(str(idx).encode())

add(0x428)
add(0x428)
#delete(0)
#add(0x518)
#delete(0)
#add(0x528)
#edit(1, b'a' * 0xf0 + p64(0x200))
#delete(0)
#add(0xf8)


shell()
